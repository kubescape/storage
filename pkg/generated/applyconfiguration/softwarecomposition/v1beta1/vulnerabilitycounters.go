/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// VulnerabilityCountersApplyConfiguration represents a declarative configuration of the VulnerabilityCounters type for use
// with apply.
type VulnerabilityCountersApplyConfiguration struct {
	All      *int64 `json:"all,omitempty"`
	Relevant *int64 `json:"relevant,omitempty"`
}

// VulnerabilityCountersApplyConfiguration constructs a declarative configuration of the VulnerabilityCounters type for use with
// apply.
func VulnerabilityCounters() *VulnerabilityCountersApplyConfiguration {
	return &VulnerabilityCountersApplyConfiguration{}
}

// WithAll sets the All field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the All field is set to the value of the last call.
func (b *VulnerabilityCountersApplyConfiguration) WithAll(value int64) *VulnerabilityCountersApplyConfiguration {
	b.All = &value
	return b
}

// WithRelevant sets the Relevant field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Relevant field is set to the value of the last call.
func (b *VulnerabilityCountersApplyConfiguration) WithRelevant(value int64) *VulnerabilityCountersApplyConfiguration {
	b.Relevant = &value
	return b
}
