/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	json "encoding/json"

	consts "github.com/kubescape/storage/pkg/apis/softwarecomposition/consts"
)

// HTTPEndpointApplyConfiguration represents a declarative configuration of the HTTPEndpoint type for use
// with apply.
type HTTPEndpointApplyConfiguration struct {
	Endpoint  *string                  `json:"endpoint,omitempty"`
	Methods   []string                 `json:"methods,omitempty"`
	Internal  *bool                    `json:"internal,omitempty"`
	Direction *consts.NetworkDirection `json:"direction,omitempty"`
	Headers   *json.RawMessage         `json:"headers,omitempty"`
}

// HTTPEndpointApplyConfiguration constructs a declarative configuration of the HTTPEndpoint type for use with
// apply.
func HTTPEndpoint() *HTTPEndpointApplyConfiguration {
	return &HTTPEndpointApplyConfiguration{}
}

// WithEndpoint sets the Endpoint field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Endpoint field is set to the value of the last call.
func (b *HTTPEndpointApplyConfiguration) WithEndpoint(value string) *HTTPEndpointApplyConfiguration {
	b.Endpoint = &value
	return b
}

// WithMethods adds the given value to the Methods field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Methods field.
func (b *HTTPEndpointApplyConfiguration) WithMethods(values ...string) *HTTPEndpointApplyConfiguration {
	for i := range values {
		b.Methods = append(b.Methods, values[i])
	}
	return b
}

// WithInternal sets the Internal field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Internal field is set to the value of the last call.
func (b *HTTPEndpointApplyConfiguration) WithInternal(value bool) *HTTPEndpointApplyConfiguration {
	b.Internal = &value
	return b
}

// WithDirection sets the Direction field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Direction field is set to the value of the last call.
func (b *HTTPEndpointApplyConfiguration) WithDirection(value consts.NetworkDirection) *HTTPEndpointApplyConfiguration {
	b.Direction = &value
	return b
}

// WithHeaders sets the Headers field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Headers field is set to the value of the last call.
func (b *HTTPEndpointApplyConfiguration) WithHeaders(value json.RawMessage) *HTTPEndpointApplyConfiguration {
	b.Headers = &value
	return b
}
