/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// FileMetadataEntryApplyConfiguration represents a declarative configuration of the FileMetadataEntry type for use
// with apply.
type FileMetadataEntryApplyConfiguration struct {
	Mode            *int64  `json:"mode,omitempty"`
	Type            *string `json:"type,omitempty"`
	LinkDestination *string `json:"linkDestination,omitempty"`
	UserID          *int64  `json:"userID,omitempty"`
	GroupID         *int64  `json:"groupID,omitempty"`
	MIMEType        *string `json:"mimeType,omitempty"`
	Size_           *int64  `json:"size,omitempty"`
}

// FileMetadataEntryApplyConfiguration constructs a declarative configuration of the FileMetadataEntry type for use with
// apply.
func FileMetadataEntry() *FileMetadataEntryApplyConfiguration {
	return &FileMetadataEntryApplyConfiguration{}
}

// WithMode sets the Mode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mode field is set to the value of the last call.
func (b *FileMetadataEntryApplyConfiguration) WithMode(value int64) *FileMetadataEntryApplyConfiguration {
	b.Mode = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *FileMetadataEntryApplyConfiguration) WithType(value string) *FileMetadataEntryApplyConfiguration {
	b.Type = &value
	return b
}

// WithLinkDestination sets the LinkDestination field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LinkDestination field is set to the value of the last call.
func (b *FileMetadataEntryApplyConfiguration) WithLinkDestination(value string) *FileMetadataEntryApplyConfiguration {
	b.LinkDestination = &value
	return b
}

// WithUserID sets the UserID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UserID field is set to the value of the last call.
func (b *FileMetadataEntryApplyConfiguration) WithUserID(value int64) *FileMetadataEntryApplyConfiguration {
	b.UserID = &value
	return b
}

// WithGroupID sets the GroupID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GroupID field is set to the value of the last call.
func (b *FileMetadataEntryApplyConfiguration) WithGroupID(value int64) *FileMetadataEntryApplyConfiguration {
	b.GroupID = &value
	return b
}

// WithMIMEType sets the MIMEType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MIMEType field is set to the value of the last call.
func (b *FileMetadataEntryApplyConfiguration) WithMIMEType(value string) *FileMetadataEntryApplyConfiguration {
	b.MIMEType = &value
	return b
}

// WithSize_ sets the Size_ field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Size_ field is set to the value of the last call.
func (b *FileMetadataEntryApplyConfiguration) WithSize_(value int64) *FileMetadataEntryApplyConfiguration {
	b.Size_ = &value
	return b
}
