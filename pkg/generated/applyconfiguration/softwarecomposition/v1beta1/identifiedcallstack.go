/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	softwarecompositionv1beta1 "github.com/kubescape/storage/pkg/apis/softwarecomposition/v1beta1"
)

// IdentifiedCallStackApplyConfiguration represents a declarative configuration of the IdentifiedCallStack type for use
// with apply.
type IdentifiedCallStackApplyConfiguration struct {
	CallID    *softwarecompositionv1beta1.CallID `json:"callID,omitempty"`
	CallStack *CallStackApplyConfiguration       `json:"callStack,omitempty"`
}

// IdentifiedCallStackApplyConfiguration constructs a declarative configuration of the IdentifiedCallStack type for use with
// apply.
func IdentifiedCallStack() *IdentifiedCallStackApplyConfiguration {
	return &IdentifiedCallStackApplyConfiguration{}
}

// WithCallID sets the CallID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CallID field is set to the value of the last call.
func (b *IdentifiedCallStackApplyConfiguration) WithCallID(value softwarecompositionv1beta1.CallID) *IdentifiedCallStackApplyConfiguration {
	b.CallID = &value
	return b
}

// WithCallStack sets the CallStack field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CallStack field is set to the value of the last call.
func (b *IdentifiedCallStackApplyConfiguration) WithCallStack(value *CallStackApplyConfiguration) *IdentifiedCallStackApplyConfiguration {
	b.CallStack = value
	return b
}
