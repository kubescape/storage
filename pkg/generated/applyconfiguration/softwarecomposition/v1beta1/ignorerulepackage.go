/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

// IgnoreRulePackageApplyConfiguration represents a declarative configuration of the IgnoreRulePackage type for use
// with apply.
type IgnoreRulePackageApplyConfiguration struct {
	Name         *string `json:"name,omitempty"`
	Version      *string `json:"version,omitempty"`
	Type         *string `json:"type,omitempty"`
	Location     *string `json:"location,omitempty"`
	UpstreamName *string `json:"upstream-name,omitempty"`
}

// IgnoreRulePackageApplyConfiguration constructs a declarative configuration of the IgnoreRulePackage type for use with
// apply.
func IgnoreRulePackage() *IgnoreRulePackageApplyConfiguration {
	return &IgnoreRulePackageApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *IgnoreRulePackageApplyConfiguration) WithName(value string) *IgnoreRulePackageApplyConfiguration {
	b.Name = &value
	return b
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *IgnoreRulePackageApplyConfiguration) WithVersion(value string) *IgnoreRulePackageApplyConfiguration {
	b.Version = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *IgnoreRulePackageApplyConfiguration) WithType(value string) *IgnoreRulePackageApplyConfiguration {
	b.Type = &value
	return b
}

// WithLocation sets the Location field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Location field is set to the value of the last call.
func (b *IgnoreRulePackageApplyConfiguration) WithLocation(value string) *IgnoreRulePackageApplyConfiguration {
	b.Location = &value
	return b
}

// WithUpstreamName sets the UpstreamName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpstreamName field is set to the value of the last call.
func (b *IgnoreRulePackageApplyConfiguration) WithUpstreamName(value string) *IgnoreRulePackageApplyConfiguration {
	b.UpstreamName = &value
	return b
}
