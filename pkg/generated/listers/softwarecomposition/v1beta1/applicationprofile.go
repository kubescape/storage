/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	softwarecompositionv1beta1 "github.com/kubescape/storage/pkg/apis/softwarecomposition/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ApplicationProfileLister helps list ApplicationProfiles.
// All objects returned here must be treated as read-only.
type ApplicationProfileLister interface {
	// List lists all ApplicationProfiles in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*softwarecompositionv1beta1.ApplicationProfile, err error)
	// ApplicationProfiles returns an object that can list and get ApplicationProfiles.
	ApplicationProfiles(namespace string) ApplicationProfileNamespaceLister
	ApplicationProfileListerExpansion
}

// applicationProfileLister implements the ApplicationProfileLister interface.
type applicationProfileLister struct {
	listers.ResourceIndexer[*softwarecompositionv1beta1.ApplicationProfile]
}

// NewApplicationProfileLister returns a new ApplicationProfileLister.
func NewApplicationProfileLister(indexer cache.Indexer) ApplicationProfileLister {
	return &applicationProfileLister{listers.New[*softwarecompositionv1beta1.ApplicationProfile](indexer, softwarecompositionv1beta1.Resource("applicationprofile"))}
}

// ApplicationProfiles returns an object that can list and get ApplicationProfiles.
func (s *applicationProfileLister) ApplicationProfiles(namespace string) ApplicationProfileNamespaceLister {
	return applicationProfileNamespaceLister{listers.NewNamespaced[*softwarecompositionv1beta1.ApplicationProfile](s.ResourceIndexer, namespace)}
}

// ApplicationProfileNamespaceLister helps list and get ApplicationProfiles.
// All objects returned here must be treated as read-only.
type ApplicationProfileNamespaceLister interface {
	// List lists all ApplicationProfiles in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*softwarecompositionv1beta1.ApplicationProfile, err error)
	// Get retrieves the ApplicationProfile from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*softwarecompositionv1beta1.ApplicationProfile, error)
	ApplicationProfileNamespaceListerExpansion
}

// applicationProfileNamespaceLister implements the ApplicationProfileNamespaceLister
// interface.
type applicationProfileNamespaceLister struct {
	listers.ResourceIndexer[*softwarecompositionv1beta1.ApplicationProfile]
}
