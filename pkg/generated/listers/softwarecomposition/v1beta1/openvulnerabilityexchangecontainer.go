/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	softwarecompositionv1beta1 "github.com/kubescape/storage/pkg/apis/softwarecomposition/v1beta1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// OpenVulnerabilityExchangeContainerLister helps list OpenVulnerabilityExchangeContainers.
// All objects returned here must be treated as read-only.
type OpenVulnerabilityExchangeContainerLister interface {
	// List lists all OpenVulnerabilityExchangeContainers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*softwarecompositionv1beta1.OpenVulnerabilityExchangeContainer, err error)
	// OpenVulnerabilityExchangeContainers returns an object that can list and get OpenVulnerabilityExchangeContainers.
	OpenVulnerabilityExchangeContainers(namespace string) OpenVulnerabilityExchangeContainerNamespaceLister
	OpenVulnerabilityExchangeContainerListerExpansion
}

// openVulnerabilityExchangeContainerLister implements the OpenVulnerabilityExchangeContainerLister interface.
type openVulnerabilityExchangeContainerLister struct {
	listers.ResourceIndexer[*softwarecompositionv1beta1.OpenVulnerabilityExchangeContainer]
}

// NewOpenVulnerabilityExchangeContainerLister returns a new OpenVulnerabilityExchangeContainerLister.
func NewOpenVulnerabilityExchangeContainerLister(indexer cache.Indexer) OpenVulnerabilityExchangeContainerLister {
	return &openVulnerabilityExchangeContainerLister{listers.New[*softwarecompositionv1beta1.OpenVulnerabilityExchangeContainer](indexer, softwarecompositionv1beta1.Resource("openvulnerabilityexchangecontainer"))}
}

// OpenVulnerabilityExchangeContainers returns an object that can list and get OpenVulnerabilityExchangeContainers.
func (s *openVulnerabilityExchangeContainerLister) OpenVulnerabilityExchangeContainers(namespace string) OpenVulnerabilityExchangeContainerNamespaceLister {
	return openVulnerabilityExchangeContainerNamespaceLister{listers.NewNamespaced[*softwarecompositionv1beta1.OpenVulnerabilityExchangeContainer](s.ResourceIndexer, namespace)}
}

// OpenVulnerabilityExchangeContainerNamespaceLister helps list and get OpenVulnerabilityExchangeContainers.
// All objects returned here must be treated as read-only.
type OpenVulnerabilityExchangeContainerNamespaceLister interface {
	// List lists all OpenVulnerabilityExchangeContainers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*softwarecompositionv1beta1.OpenVulnerabilityExchangeContainer, err error)
	// Get retrieves the OpenVulnerabilityExchangeContainer from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*softwarecompositionv1beta1.OpenVulnerabilityExchangeContainer, error)
	OpenVulnerabilityExchangeContainerNamespaceListerExpansion
}

// openVulnerabilityExchangeContainerNamespaceLister implements the OpenVulnerabilityExchangeContainerNamespaceLister
// interface.
type openVulnerabilityExchangeContainerNamespaceLister struct {
	listers.ResourceIndexer[*softwarecompositionv1beta1.OpenVulnerabilityExchangeContainer]
}
