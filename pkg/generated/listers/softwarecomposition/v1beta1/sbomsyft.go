/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/kubescape/storage/pkg/apis/softwarecomposition/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SBOMSyftLister helps list SBOMSyfts.
// All objects returned here must be treated as read-only.
type SBOMSyftLister interface {
	// List lists all SBOMSyfts in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.SBOMSyft, err error)
	// SBOMSyfts returns an object that can list and get SBOMSyfts.
	SBOMSyfts(namespace string) SBOMSyftNamespaceLister
	SBOMSyftListerExpansion
}

// sBOMSyftLister implements the SBOMSyftLister interface.
type sBOMSyftLister struct {
	indexer cache.Indexer
}

// NewSBOMSyftLister returns a new SBOMSyftLister.
func NewSBOMSyftLister(indexer cache.Indexer) SBOMSyftLister {
	return &sBOMSyftLister{indexer: indexer}
}

// List lists all SBOMSyfts in the indexer.
func (s *sBOMSyftLister) List(selector labels.Selector) (ret []*v1beta1.SBOMSyft, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.SBOMSyft))
	})
	return ret, err
}

// SBOMSyfts returns an object that can list and get SBOMSyfts.
func (s *sBOMSyftLister) SBOMSyfts(namespace string) SBOMSyftNamespaceLister {
	return sBOMSyftNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SBOMSyftNamespaceLister helps list and get SBOMSyfts.
// All objects returned here must be treated as read-only.
type SBOMSyftNamespaceLister interface {
	// List lists all SBOMSyfts in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.SBOMSyft, err error)
	// Get retrieves the SBOMSyft from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.SBOMSyft, error)
	SBOMSyftNamespaceListerExpansion
}

// sBOMSyftNamespaceLister implements the SBOMSyftNamespaceLister
// interface.
type sBOMSyftNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SBOMSyfts in the indexer for a given namespace.
func (s sBOMSyftNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.SBOMSyft, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.SBOMSyft))
	})
	return ret, err
}

// Get retrieves the SBOMSyft from the indexer for a given namespace and name.
func (s sBOMSyftNamespaceLister) Get(name string) (*v1beta1.SBOMSyft, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("sbomsyft"), name)
	}
	return obj.(*v1beta1.SBOMSyft), nil
}
